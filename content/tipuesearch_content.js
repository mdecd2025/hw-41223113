var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:  https://mdecd2025.github.io/hw-41223113/content/index.html \n 學員作業倉儲:  https://github.com/mdecd2025/hw-41223113 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Week', 'text': '', 'tags': '', 'url': 'Week.html'}, {'title': 'w3', 'text': '目前班上尚未納組的學員學號:更新前 \n import urllib.request\n\n# 設定 URL\nurl = "https://mde.tw/list/2a.txt"\n\n# 讀取網站內容\nresponse = urllib.request.urlopen(url)\ndata = response.read()  # 讀取原始資料\n\n# 檢查是否為 bytes，若是則解碼\nif isinstance(data, bytes):\n    data = data.decode(\'utf-8\')\n\n# 分割行\ndata_lines = data.splitlines()\n\n# 確保資料存在\nif len(data_lines) > 1:\n    all_stud = data_lines[1:]  # 跳過標題列\n    print("總共有 " + str(len(all_stud)) + " 名學員")\nelse:\n    all_stud = []\n    print("學員名單讀取失敗")\n\n# 已分組學員帳號\ngrouped_accounts = {\n    \'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\', \n\'41023128\', \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\', \n\'41223113\', \'kim41223114\', \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\', \n\'41223138\', \'41223134\', \'41223136\', \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\', \n\'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\', \'yan21ed\', \'Lin41223107\', \'41223133\', \n\'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\', \'CHN41223132\', \n\'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\', \'41223104\', \n\'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\', \n\'WSE41223112\', \'41223146\', \'41223119\'\n}\n\n# 未分組學員清單\nungrouped_accounts = []\n\nfor student in all_stud:\n    parts = student.split()  # 用空格分割學號和帳號\n    if len(parts) == 1:\n        student_id = parts[0]\n        account = student_id  # 如果沒有帳號，將學號當作帳號\n    elif len(parts) == 2:\n        student_id, account = parts\n    \n    account = account.strip()\n    \n    # 如果帳號不在已分組帳號清單中，則加入未分組學員清單\n    if account not in grouped_accounts:\n        ungrouped_accounts.append(student_id)\n\n# 顯示未分組學員的學號\nprint("未分組學員學號清單：", ungrouped_accounts) \n 總共有 60 名學員 未分組學員學號清單： [\'41023220\', \'41223111\', \'41223124\', \'41223148\'] <completed in 46.10 ms> \n 目前班上尚未納組的學員學號:以更新過後 \n from browser import html, document\nimport urllib.request\n\n# 設定 URL\nurl = "https://mde.tw/list/2a.txt"\n\n# 讀取網站內容\nresponse = urllib.request.urlopen(url)\ndata = response.read().splitlines()  # 直接讀取並按行分割\n\n# 確保資料存在\nif len(data) > 1:\n    all_stud = data[1:]  # 跳過標題列\n    print("總共有 " + str(len(all_stud)) + " 名學員")\nelse:\n    all_stud = []\n    print("學員名單讀取失敗")\n\n# 已分組學員帳號列表\ngrouped_students_accounts = [\'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\', \'41023128\', \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\', \'41223113\', \'kim41223114\', \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\', \'41223138\', \'41223134\', \'41223136\', \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\', \'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\', \'yan21ed\', \'Lin41223107\', \'41223133\', \'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\', \'CHN41223132\', \'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\', \'41223104\', \'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\', \'WSE41223112\', \'41223146\', \'41223119\']\n\n# 找到網頁中的特定位置\nbrython_div1 = document["brython_div1"]\n\n# *動態插入未分組學員資料，並為帳號添加超連結*\nfor index, student in enumerate(all_stud, start=1):\n    parts = student.split()  # 用空格分割學號和帳號\n\n    if len(parts) == 2:\n        student_id, account = parts\n    else:\n        student_id = parts[0]\n        account = student_id  # 若沒有帳號，則使用學號當帳號\n\n    if account not in grouped_students_accounts:  # 只顯示未分組的學員\n        # 設定學號的超連結\n        account_link = f"https://mdecd2025.github.io/hw-{account.strip()}"\n        # 設定repo的超連結\n        repo_link = f"https://github.com/mdecd2025/hw-{account.strip()}"\n        \n        # 插入學號和帳號的超連結，並加上repo的超連結\n        brython_div1 <= f"{index}. " + html.A(student_id.strip(), href=account_link) + " "\n        brython_div1 <= f"（" + html.A("repo", href=repo_link) + "）"\n        brython_div1 <= html.BR()  # 換行\n    else:\n        print(f"帳號 {account} 已分組，跳過顯示") \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w5', 'text': 'Webots Tutorial 1 ~3 (HW3) \n Q1:請 用繁體中文詳細說明下列資料:\xa0 https://cyberbotics.com/doc/guide/introduction-to-webots\xa0 \n Q2:請 整理\xa0 https://cyberbotics.com/doc/guide/introduction-to-webots \xa0中重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明. \n Q3:請 摘要出下列內容: (放入英文文章內容) \n Q4:請 列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法: \n Q5: 說明如何採手動方式在 Webots 建立下列場景: \n Q6:希 望可以手把手一步步說明該如何利用圖形介面 menu 建立這個場景, 過程中有那些要點必須特別注意? \n A1:由41223113回答 \n Webots 用戶指南 R2025a \n 什麼是 Webots？ \n Webots 是一款專業的移動機器人模擬軟體，提供 3D 虛擬世界建構與物理模擬（質量、關節、摩擦係數等）。用戶可添加被動物件或主動機器人（輪式、腿式、飛行等），並為其配備感測器、驅動裝置（距離感測器、攝影機、馬達等），再透過程式控制機器人的行為。此外，Webots 內建多種機器人模型與範例程式，可快速上手。 \n Webots 也支援與真實機器人（如 e-puck、DARwIn-OP、Nao）連接，讓用戶能將模擬結果應用於實體機器人。 \n Webots 的應用 \n 適用於學術研究與教育，涵蓋： \n \n 機器人原型開發 （學術研究、汽車與航太產業、玩具等） \n 機器人運動學 （雙足、四足、仿人機器人） \n 多智能體研究 （群體智能、協作機器人） \n 自適應行為研究 （基因演算法、神經網路、人工智慧） \n 機器人教學 （編程、機器人學） \n 機器人競賽 （如 Robotstadium） \n \n Webots 需要的基本知識 \n \n 需具備 \xa0 C、C++、Java、Python 或 MATLAB \xa0 的基礎編程能力來控制機器人（若不會編程，可使用 BotStudio 圖形化工具）。 \n 若要建立自訂機器人或物件，需具備基本 \xa0 3D 設計與 VRML97 語言 \xa0 知識。 \n \n 如何獲取用戶支持？ \n \n 付費支援 ：Cyberbotics 提供 Premier 服務與客製開發支援。 \n 社群支援 （不保證回覆）：\n \n Robotics StackExchange （最佳技術討論區） \n GitHub Discussions （開發與文件相關問題） \n GitHub Issues （僅限回報錯誤） \n Discord （即時討論） \n \n \n \n Webots 模擬的組成 \n \n 世界檔 (.wbt) ：描述機器人與環境，包括物件的 \xa0 位置、外觀、物理特性 \xa0 等（類似 VRML97）。 \n 控制器程式 （C/C++/Java/Python/MATLAB）：用於控制機器人，可多個機器人共用相同控制程式。 \n 物理插件（選用） ：可調整 Webots 物理行為（C/C++）。 \n \n 什麼是 Controller（控制器）？ \n 控制器是控制機器人的程式，可用 C、C++、Java、Python 或 MATLAB 編寫。每個機器人啟動模擬時，Webots 會為其執行相應的控制程式。 \n \n 編譯型語言 （C、C++）：需編譯為執行檔。 \n 直譯語言 （Python、MATLAB）：需安裝對應的運行環境。 \n 混合語言 （Java）：需編譯為 \xa0 .class \xa0 或 \xa0 .jar ，由 JVM 執行。 \n \n 控制器程式存放於 Webots 專案內的 \xa0 controllers \xa0 目錄。 \n 什麼是 Supervisor Controller（監督控制器）？ \n 若機器人的 \xa0 supervisor 欄位設為 TRUE ，則其控制器為 \xa0 監督控制器 ，擁有額外權限，如： \n \n 控制模擬運行（移動機器人、錄製模擬畫面等）。 \n 可用於高層級操作，而非單純模擬真實機器人行為。 \n \n 監督控制器支援與一般控制器相同的編程語言。 \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w16', 'text': '國立虎尾科技大學 - 機械設計工程系 - cd2025 W16 HW1 - 41223113 \n \n 國立虎尾科技大學 - 機械設計工程系 - cd2025 W16 HW2 - 41223113 \n \n \n', 'tags': '', 'url': 'w16.html'}, {'title': 'Tasks', 'text': '', 'tags': '', 'url': 'Tasks.html'}, {'title': 'task1', 'text': '', 'tags': '', 'url': 'task1.html'}, {'title': 'list', 'text': '顯示我們全部組員的倉儲和網站: \n \n from browser import html, document, ajax\n \n# 目標 URL\nurl = "https://mde.tw/list/2a.txt"\n \n# G2 組員學號清單\ng2_members = {"41223113", "41223114", "41223116", "41223130", "41223141", "41223149"}\n \n# 定義回呼函式來處理資料\ndef on_complete(req):\n    if req.status == 200:\n        data = req.text.splitlines()  # 以換行分割成數列\n        all_stud = [line.strip() for line in data[1:] if line.strip()]  # 移除空白並排除空行\n \n        # 取得網頁上的 div 來顯示內容\n        brython_div1 = document["brython_div1"]\n \n        # 過濾 G2 組員\n        g2_list = []\n        for student in all_stud:\n            parts = student.split()  # 用空白分割\n            if len(parts) == 2:\n                student_id, student_account = parts\n                if student_id in g2_members:\n                    g2_list.append((student_id, student_account))\n \n        # 顯示組員數量\n        brython_div1 <= f"G2 組別 - 組員共 {len(g2_list)} 名"\n        brython_div1 <= html.BR() * 2\n \n        # 逐行顯示 G2 組員\n        for student_id, student_account in g2_list:\n            # 學號超連結\n            student_id_link = html.A(student_id, href=f"https://mdecd2025.github.io/hw-{student_account}", target="_blank")\n \n            # 帳號超連結\n            github_link = html.A(student_account, href=f"https://github.com/mdecd2025/hw-{student_account}", target="_blank")\n \n            # 插入內容\n            brython_div1 <= student_id_link + " : " + github_link\n            brython_div1 <= html.BR()\n \n# 發送 AJAX 請求\najax.get(url, oncomplete=on_complete) \n G2 組別 - 組員共 6 名 41223113 \xa0:\xa0 41223113 41223114 \xa0:\xa0 kim41223114 41223116 \xa0:\xa0 41223116 41223130 \xa0:\xa0 joeisme1208 41223141 \xa0:\xa0 41223141 41223149 \xa0:\xa0 otakuyoyo \n 在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載 \xa0 portable_wcm2025.7z \xa0 (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z \xa0 (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z \xa0 (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n 心得: \n 透過教學影片把python升級，在升級 Python 版本時，我遇到了  Python 3.10  與  3.13  的 衝突問題 ，導致  pip  無法正常運行。詢問chatgpt後，錯誤的訊息顯示  python310.dll  與  Python 3.13  不兼容。為解決此問題，我檢查了系統中的  Python 版本 ( where python ) ，並調整  PATH  變數，移除舊版本的路徑。最後，我重新安裝  pip ，或 直接使用  python -m pip  執行命令 ，成功修復環境並正常運行 Python 3.13。 \n', 'tags': '', 'url': 'list.html'}, {'title': 'task2', 'text': '\xa0(使用 SSH 協定執行作業倉儲的推送): \n \n \n \\ \n \n \n \n task3 \n', 'tags': '', 'url': 'task2.html'}, {'title': 'task4', 'text': '', 'tags': '', 'url': 'task4.html'}, {'title': 'task5', 'text': '', 'tags': '', 'url': 'task5.html'}, {'title': 'task6', 'text': '\n \n', 'tags': '', 'url': 'task6.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n hw1作業壓縮檔: \n /downloads/41223113-HW1.7z \n hw1-webots操作模擬影片 \n \n 心得: \n 這段 Webots 世界檔雖然展現了多關節機械臂的結構設計，但在多重關節端點指向同一 Solid（如 link3）時，容易產生 kinematic loop，造成物理模擬不穩定。此外，外部控制器若未及時連線，機器人將無法正常運作。背景與光源資源依賴 GitHub 外部連結，若失效會影響場景完整性。物理參數未細緻設定，也可能影響模擬真實度。這些細節都提醒我們，設計複雜機械結構時需謹慎考慮模擬平台的限制與資源管理。 \n 詢問建議: \n 建議將 EXTERNPROTO 檔案下載到本地，引用本地路徑以提升穩定性；關節命名與結構應明確區分，避免重名或錯誤引用；此外，可加入預設控制器，確保即使外部控制器未連接，機器人也能執行基本動作，提升模擬的便利性與穩定性。 \n hw1作業題問解答: \n \n \n 在製作 HW1 之前是否實際練習 Tutorial1 與 Tutorial2? 必須先實際練習 Tutorial1 與 Tutorial2，熟悉 Webots 基本操作與控制器撰寫。 \n \n \n Webots 是什麼樣的軟體？它主要用途為何？ Webots 是跨平台機器人模擬軟體，用於機器人建模、控制演算法開發與教學研究。 \n \n \n 在 Tutorial1 中，學習者需要操作的主要機器人模型名稱是什麼？ 主要使用 e-puck 小型輪式移動機器人。 \n \n \n 如何在 Webots 中建立並執行一個新的模擬世界（world）？ 新建 .wbt 世界檔，添加物件與機器人，指定控制器，按 Play 執行模擬。 \n \n \n 請說明如何讓機器人在模擬中移動，並指出相關的程式控制方式。 控制器設定馬達速度，透過時間步長迴圈更新馬達輸出，驅動機器人移動。 \n \n \n Tutorial1 中，學習者需要修改哪些參數或檔案來控制機器人的行為？ 修改控制器程式檔案，調整馬達與感測器邏輯，並在 world 檔指定控制器名稱。 \n \n \n 請簡述 Webots 控制器（controller）的功能及其與機器人的關係。 控制器讀取感測器資料並控制機器人動作，透過 API 與機器人互動。 \n \n \n 在 Tutorial2 中，機器人需要完成什麼樣的任務或行為？ 完成環境感知與自主避障任務。 \n \n \n Webots 中的 "Supervisor" 是什麼？它與一般機器人控制器有何不同？ Supervisor 是特殊控制器，能管理整個模擬環境，操作任意物件。 \n \n \n 請說明如何在 Webots 中進行感測器數據的讀取與應用（例如距離感測器、攝影機）。 取得感測器裝置並啟動，在迴圈中讀取數據並應用於控制邏輯。 \n \n \n 若要延伸 Tutorial2 讓機器人具備自主避障能力，你會怎麼設計與實作？ 利用多個距離感測器判斷障礙物，設計避障策略，控制器中實作狀態機調整馬達速度。 \n \n \n 請說明 Webots 中「時間步長（timestep）」的意義，以及它對模擬的影響。 時間步長為模擬更新間隔，影響精度與速度，步長越小精度越高。 \n \n \n 如何在 Webots 中為機器人新增感測器？請說明基本步驟。 在 world 編輯器新增感測器節點，設定參數，控制器中取得並啟動感測器。 \n \n \n 請說明如何將 Webots 控制器程式從 Python 改為 C 語言，並指出相關設定。 建立 C 程式，指定控制器名稱，使用 C API 編寫並編譯。 \n \n \n Tutorial1、2 中，若控制器程式有語法錯誤時，Webots 會如何反應？學員該如何排除？ 顯示錯誤訊息，控制器無法執行，利用 Console 與 Debug 工具排錯。 \n \n \n 如何將 Webots 世界（world）或機器人設定檔分享給他人，確保對方可順利開啟模擬？ 分享完整專案資料夾，包含 .wbt、.proto、controllers 等。 \n \n \n 如果想讓機器人在模擬時產生聲音或播放音樂，Webots 提供哪些方法？ 使用 Sound 節點新增聲音來源，控制器可播放與停止音效。 \n \n \n 請說明如何在 Webots 中同時操作多個機器人，並讓它們各自執行不同控制器。 新增多機器人節點，分別指定不同控制器名稱，Webots 啟動多控制器。 \n \n \n 在 Webots 控制器中，如何獲得機器人的當前座標位置與朝向？ 利用 Supervisor API 的 getPosition() 與 getOrientation()。 \n \n \n 請說明 Webots 控制器中感測器資料的單位（例如距離感測器、加速度計），以及如何正確解讀。 距離感測器以公尺或毫米為單位，加速度計為 m/s²，依規格解讀。 \n \n \n 如果想要錄製 Webots 模擬畫面並輸出成影片檔，該如何操作？ 使用內建錄影功能或 Supervisor 指令錄製並輸出影片。 \n \n \n Webots 中的 PROTO 文件有什麼作用？與 world 檔（.wbt）的關係為何？ PROTO 定義物件模板，world 檔引用 PROTO 建立場景物件。 \n \n \n 請說明如何在 Webots 中設定機器人的初始位置和方向。 修改機器人節點的 translation 與 rotation 屬性。 \n \n \n 在 Tutorial1 或 Tutorial2 中，如何讓機器人執行預設外的自訂動作？ 修改控制器程式，新增自訂函式並在主迴圈呼叫。 \n \n \n Webots 支援哪些主流程控制語言？各有何優缺點？ 支援 C/C++、Python、Java、MATLAB。C/C++效能佳，Python易學，Java跨平台，MATLAB適合數學分析。 \n \n \n 機器人控制器程式如何與其他程式（如資料記錄、遠端伺服器）進行通訊？ 使用 TCP/IP、UDP 或 WebSocket 協定進行資料交換。 \n \n \n Webots 的模擬世界中燈光和陰影設定如何影響感測器或相機的數據？ 影響相機影像亮度與對比度，可能影響視覺感測器辨識。 \n \n \n 如何在 Webots 中調整機器人或感測器的物理參數（如質量、摩擦係數）？ 修改物件 physics 節點的 mass、friction 等屬性。 \n \n \n 請說明如何使用 Webots 的 Console 與 Debug 工具協助程式錯誤排除。 Console 顯示輸出與錯誤，Debug 可設定斷點與單步執行。 \n \n \n Tutorial1、2 裡的機器人遇到物體時，碰撞偵測機制如何運作？ 物理引擎偵測碰撞事件，感測器資料反映碰撞狀況，控制器可調整行為。 \n \n \n 若要將 Webots 模擬結果導出並進行數據分析，你會選擇哪些方法與工具？ 在控制器中記錄感測器數據與狀態至檔案，使用 Python、MATLAB 等工具進行後續分析。 \n \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2 task3', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 利用fourbar_slvs資料夾內零件，繪製link-1 \n \n 利用fourbar_slvs資料夾內零件，繪製link-2 \n \n 利用fourbar_slvs資料夾內零件，繪製link-3 \n \n 利用fourbar_slvs資料夾內零件，繪製base-1 \n \n 利用fourbar_slvs資料夾內零件，繪製fourbar_linkage_design-1 \n \n 利用fourbar_slvs資料夾內零件，繪製shaft-1 \n \n 利用fourbar_slvs資料夾內零件，繪製shaft-2 \n \n 利用fourbar_slvs資料夾內零件，繪製fourbar_linkage_design_w_assembiy \n \n hw2作業壓縮檔: \n /downloads/41223113.7z \n /downloads/41223113-HW2.7z \n hw2-webots操作模擬影片 \n \n 心得: \n 這份 Webots 世界檔展示了四連桿機構的建模，但多重關節指向同一 Solid，容易形成 kinematic loop，Webots 物理引擎對此支援有限，模擬時常出現不穩定或異常。外部資源與本地檔案路徑若有誤，模型將無法完整載入，影響仿真效果。物理參數未細緻設定，也會降低模擬的真實性。這些問題提醒我們，在設計複雜結構時需特別注意模擬平台的限制、資源管理及參數設定，以確保仿真穩定且可重現。 \n 詢問優化建議: \n 這段優化建議提醒我們應避免 kinematic loop，透過簡化結構或使用 Webots 支援的 Constraint 來提升模擬穩定性。同時，將 EXTERNPROTO 和 CAD 模型本地化，確保路徑正確，避免載入失敗。明確設定每個 Solid 的質量與慣性，增強物理真實感。基座物件應補齊 boundingObject 和 Physics 屬性，並且命名上應有意義且唯一，方便維護與擴展。這些措施可提升模擬的穩定性與可維護性。 \n hw2作業題問解答: \n \n Tutorial3：地面顏色感測與行為控制 \n  主要學習目標：學習利用 ground sensor 偵測地面顏色，並根據顏色改變機器人行為。 \n 偵測方式：使用安裝於機器人底部的 ground sensor 讀取反射光強度。 \n 感測器作用：辨識地面顏色（如黑、白、灰），用於巡線或標記辨識。 \n 程式操作：啟用感測器並讀取數值，根據數值判斷顏色。 \n 行為改變：遇黑線時停下或轉向，遇白色繼續前進。 \n 校正原因：環境光線與地面材質影響感測器數值，校正提升準確度。 \n sampling period 設定：啟用感測器時指定取樣週期。 \n 判斷錯誤原因：感測器未校正、光線變化、材質反光異常、門檻設定不當。 \n \n Tutorial4：距離感測與避障行為 \n  核心任務：利用距離感測器偵測障礙物，實作自動避障。 \n 偵測方式：e-puck 配備多個紅外線距離感測器，取得周圍障礙物距離。 \n DistanceSensor 運作：回傳與障礙物距離成比例的數值（0~4096）。 \n 程式操作：取得感測器裝置，啟用並讀取數值。    數值單位與轉換：數值為比例值，需校正轉換為實際距離。 \n sampling period 設定：啟用時設定取樣週期（毫秒）。 \n 避障行為實作：根據感測器數值判斷障礙物方向，調整轉向。 \n 雙側障礙物處理：後退並隨機轉向避免死角。 \n 多感測器考量：提供完整環境資訊，提升避障精確度。 \n 故障排除：檢查感測器啟用、校正門檻、演算法優化、馬達控制。 \n \n Tutorial5：多感測器整合與複雜任務 \n  主題：結合多種感測器，實作複雜任務與有限狀態機（FSM）。 \n 多感測器反應：根據地面顏色與障礙物狀態調整行為。 \n 感測器融合：同時讀取多感測器數值，設計 FSM 進行狀態切換。 \n 巡線與避障結合：巡線為主，遇障礙物暫停巡線避障。 \n 衝突訊息決策：設定感測器優先權或依狀態機切換行為。 \n 任務流程切換：以 FSM 控制狀態與行為。 \n FSM 設計：定義狀態，根據感測器輸入切換。 \n 挑戰題目：如同時巡線避障，先分別實作再整合。 \n 自主巡邏功能：路徑規劃、位置記錄、感測器融合、狀態控制。 \n 感測器資料融合（Sensor Fusion） \n 將多種感測器數據整合，提升環境感知與決策能力。 \n 應用於巡線避障、複雜任務狀態切換 \n \n \n', 'tags': '', 'url': 'HW2 task3.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n hw3作業壓縮檔: \n /downloads/41223113-HW3.7z \n hw3-webots操作影片 \n \n hw3作業題問解答: \n \n Tutorial6 相關提問 \n \n 主要學習主題? \n Tutorial6 主要學習如何在 Webots 中為 e-puck 機器人新增攝影機（Camera）裝置，並透過程式控制攝影機，取得影像資料，進而讓機器人能依據視覺資訊做出反應。 \n e-puck 機器人新增裝置? \n 在本單元，e-puck 機器人新增了攝影機（Camera）裝置。 \n 如何在 Webots 中使用攝影機（Camera）? \n 需在機器人結構中加入 Camera 節點，設定好名稱、位置與方向。然後在控制器程式中取得 Camera 物件並啟用。 \n Camera 需要在程式中如何啟用? \n 需呼叫 camera->enable(TIME_STEP)（C++）或 wb_camera_enable(camera, TIME_STEP)（C）來啟用攝影機，TIME_STEP 是模擬步進時間。 \n 如何取得攝影機擷取到的影像資料? \n 啟用攝影機後，可用 camera->getImage()（C++）或 wb_camera_get_image(camera)（C）取得影像資料。 \n 機器人如何依據攝影機影像做出反應? \n 可根據影像中的顏色、形狀等資訊進行分析，然後調整機器人行為（如移動方向、速度等）。 \n Camera 裝置可以調整哪些參數? \n 可調整解析度（寬、高）、視場角（FOV）、更新頻率等。 \n 影像解析度的設定會對模擬有什麼影響? \n 解析度越高，影像越清晰，但會增加運算負擔，降低模擬效率。 \n 如何將攝影機影像儲存成圖片檔? \n 可將取得的影像資料存成圖片檔（如 PNG），需用程式將影像 buffer 轉存為檔案，通常會用到額外的影像處理函式庫。 \n 若攝影機影像顯示異常，可能的原因? \n 常見原因有：Camera 節點未正確加入、名稱不符、未啟用、解析度設置錯誤、Webots 需重啟等。 \n \n Tutorial7 相關提問 \n \n 核心任務? \n 讓 e-puck 機器人利用攝影機偵測並辨識顏色，進而做出相應行為。 \n e-puck 機器人如何偵測顏色? \n 透過攝影機擷取影像後，分析影像像素的顏色資訊。 \n 如何分析攝影機擷取的影像來辨識特定顏色 \n 可逐像素分析 RGB 或 HSV 值，判斷是否落在目標顏色範圍內。 \n OpenCV 或其他影像處理函式庫的應用方式? \n 將 Webots 取得的影像資料轉為 OpenCV 可處理的格式（如 Mat），然後用 OpenCV 函式進行顏色過濾、區域偵測等。 \n 如何將影像中的顏色資訊轉換為機器人行為? \n 分析影像中目標顏色的位置，決定機器人移動方向或速度，實現追蹤等行為。 \n 若要辨識多種顏色，程式需考慮哪些步驟? \n 需為每種顏色設置對應的閾值範圍，分別進行偵測，並根據偵測結果決定行為優先順序。 \n 如何解決不同光源下顏色偵測的不穩定問題? \n 可將影像轉換為 HSV 色彩空間，並動態調整閾值，或進行自動白平衡、亮度校正等。 \n e-puck 機器人如何追蹤影像中的顏色物件? \n 偵測到目標顏色後，計算其在影像中的位置，調整機器人行進方向，使目標保持在中央。 \n 若影像中有多個同色物件，程式如何選擇追蹤目標? \n 可選擇面積最大、最靠近中央或最近的物件作為追蹤目標。 \n Tutorial7 能否應用於現實世界的機器人？需做哪些調整？ \n 可應用於現實機器人，但需考慮真實攝影機的雜訊、光源變化、鏡頭畸變等，並進行相應的校正與調整。 \n \n Tutorial8 相關提問 \n \n 主要學習目標? \n 學習 Supervisor 控制器的使用，實現對多個機器人或物件的監控與管理。 \n 什麼是 Supervisor？在 Tutorial8 扮演什麼角色？ \n Supervisor 是一種特殊的控制器，可取得並控制場景中所有物件，負責監督與管理模擬過程。 \n Supervisor 可以進行哪些操作？ \n 可取得物件狀態、控制物件位置、重設模擬、紀錄數據等。 \n 如何在 Supervisor 控制器中存取並控制其他機器人？ \n 可透過 API 取得機器人節點，然後讀取或改寫其屬性（如位置、狀態）。 \n 如何用 Supervisor 監測機器人是否達到目標區域？ \n 可定期取得機器人座標，判斷是否進入目標區域範圍。 \n Supervisor 如何重設模擬或重置機器人位置？ \n 可呼叫 Supervisor 的重設函式，或直接設定機器人座標來重置位置。 \n Supervisor 能否獲取所有物件的座標與狀態？如何實作？ \n 可以，透過遍歷場景樹節點，取得各物件座標與狀態。 \n 如何紀錄機器人模擬過程的數據供日後分析？ \n Supervisor 可將模擬過程中的關鍵數據（如座標、狀態等）寫入檔案做紀錄。 \n Supervisor 可以如何協助自動化測試機器人行為？ \n 可自動控制模擬流程、重複測試不同情境，並自動收集結果數據。 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41223113 \n 紅色連桿旋轉角度為個人學號最後兩碼:13 \n exam1 webots操作影片 \n \n # mde.tw Exam1 相關提問簡短回答: \n ## Webots 場景基本節點功能 \n ### 1. WorldInfo 節點有何作用？ WorldInfo 節點定義模擬世界的全域屬性，包括重力設定、基本時間步長(basicTimeStep)、座標系統等物理參數，是每個 Webots 世界檔案(.wbt)的必要節點。 \n ### 2. Viewpoint 節點的主要功能是什麼？ Viewpoint 節點定義 3D 視窗中觀察者的位置、朝向和視角，讓使用者可以從不同角度觀察模擬場景，可設定 position、orientation 和 fieldOfView 等屬性。 \n ### 3. TexturedBackground 與 TexturedBackgroundLight 在場景中負責什麼？ - TexturedBackground：設定場景的背景環境，提供天空盒或背景圖像 - TexturedBackgroundLight：配合背景提供環境光照，確保場景有適當的光線照明效果 \n ### 4. Robot 節點在此場景中代表什麼角色？ Robot 節點是機器人的根節點，可包含控制器程式、感測器、執行器等子節點，代表一個完整的機器人系統，具備自主行為能力。 \n ### 5. base Solid 節點的功能為何？ base Solid 節點作為四連桿機構的固定基座，提供其他連桿的參考座標系統，通常使用 DEF 命名以便其他節點引用。 \n ## 物件外觀與幾何設定 \n ### 6. Shape 與 Appearance 節點如何用於物件外觀設定？ - Shape：定義物件的視覺幾何形狀，包含 geometry 和 appearance 欄位 - Appearance：設定材質屬性，如顏色、透明度、金屬質感等視覺效果 \n ### 7. geometry Box 如何設定形狀尺寸？ 在 Box 節點中使用 size 欄位設定三維尺寸，格式為 [長度, 寬度, 高度]，單位為公尺。 \n ### 8. material Material 內的 diffuseColor 如何影響外觀？ diffuseColor 設定物件的基本顏色，使用 RGB 值表示，如 [1, 0, 0] 為紅色，[0, 1, 0] 為綠色。 \n ### 9. transparency 參數設定對外觀有何影響？ transparency 值介於 0-1 之間，0 為完全不透明，1 為完全透明。base 通常設為透明以便觀察內部機構運動。 \n ## 關節與運動控制 \n ### 10. HingeJoint 節點的用途與基本參數有哪些？ HingeJoint 實現旋轉關節功能，基本參數包括： - anchor：旋轉中心點座標 - axis：旋轉軸方向 - device：可配置馬達或感測器 \n ### 11. HingeJointParameters 節點中的 axis 與 anchor 分別代表什麼？ - axis：定義旋轉軸的方向向量，如 [0, 1, 0] 表示繞 Y 軸旋轉 - anchor：設定旋轉的中心點座標位置 \n ### 12. RotationalMotor 裝置如何與 HingeJoint 結合？ 在 HingeJoint 的 device 欄位中加入 RotationalMotor，可透過控制器程式設定旋轉速度或位置，實現自動化運動控制。 \n ### 13. 若要讓 link3 可動，需在何處設定馬達？ 需在連接 link3 的 HingeJoint 節點中的 device 欄位加入 RotationalMotor，並在控制器程式中設定適當的運動參數。 \n ## 物理屬性與碰撞檢測 \n ### 14. Solid 節點與 boundingObject 的關係為何？ boundingObject 定義 Solid 節點的碰撞檢測範圍，通常使用與視覺外形相同或簡化的幾何形狀，與 physics 節點配合使用。 \n ### 15. physics Physics 節點的功能？ Physics 節點定義物件的物理屬性，如質量、摩擦係數等，使物件能參與物理模擬，包括重力、碰撞等效果。 \n ### 16. 何謂 boundingObject？為何要指定？ boundingObject 是物件的碰撞檢測邊界，用於物理引擎計算碰撞。必須指定以實現正確的物理互動和碰撞檢測。 \n ## 座標與定位 \n ### 17. translation 與 rotation 如何決定物件在 3D 空間的位置與朝向？ - translation：設定物件在 3D 空間的位置座標 [x, y, z] - rotation：設定物件的旋轉，格式為 [軸向量 x, y, z, 角度] \n ### 18. Pose 節點的功能與使用時機？ Pose 節點用於在 children 數列中進行局部座標轉換，當需要調整子節點相對於父節點的位置和朝向時使用。 \n ### 19. anchor 參數如何影響關節的運動中心？ anchor 參數設定關節的旋轉中心點，影響連桿繞此點旋轉的運動軌跡，必須根據機構設計正確設定。 \n ## 結構設計與命名 \n ### 20. link1、link2、link3 各自代表什麼結構？ 在四連桿機構中： - link1：第一個可動連桿，連接 base 和 link2 - link2：第二個可動連桿，連接 link1 和 link3  - link3：第三個可動連桿，形成封閉運動鏈 \n ### 21. Robot 節點中 children 陣列的作用？ children 陣列用於包含機器人的所有子節點，如感測器、執行器、結構件等，建立完整的機器人模型階層結構。 \n ### 22. DEF 與 USE 的差異與用途？ - DEF：定義一個可重複使用的節點，並給予名稱 - USE：引用先前 DEF 定義的節點，避免重複定義，節省記憶體 \n ### 23. SolidReference 如何實現多關節結構的連結？ SolidReference 通過 solidName 欄位引用其他 Solid 節點，實現封閉運動鏈的約束，完成四連桿機構的閉合。 \n ### 24. endPoint 屬性在 HingeJoint 結構中的意義？ endPoint 定義關節末端連接的物件，建立關節與下一個連桿的連接關係，形成運動鏈。 \n ## 控制程式與運動檢查 \n ### 25. controller 屬性如何指定機器人控制程式？ 在 Robot 節點的 controller 欄位中指定控制器名稱，對應 controllers 目錄下的程式檔案，如 "fourbar_controller"。 \n ### 26. 如何在 Webots 檢查各關節的運動範圍？ 可在場景樹中查看 HingeJoint 的 minPosition 和 maxPosition 參數，或在模擬運行時觀察關節的實際運動情況。 \n ## 設計考量與規則 \n ### 27. 為什麼 link2 會包含 Pose 及多個子 Shape？ link2 可能需要複雜的幾何結構或特定的定位方式，使用 Pose 進行座標轉換，多個 Shape 建立詳細的視覺外形。 \n ### 28. 四連桿結構在此場景的設計意圖為何？ 展示封閉運動鏈的機構模擬，讓學員理解如何在 Webots 中建立複雜的機械結構，並學習關節約束和運動控制。 \n ### 29. 場景中透明的 base 有什麼作用？ 透明 base 可讓觀察者清楚看到機構內部的運動情況，便於理解機構的運動原理和檢查設計是否正確。 \n ### 30. 製作此場景時，應注意哪些結構層級與命名規則？ - 使用有意義的 DEF 名稱（如 base, link1, joint1） - 正確設定節點階層關係 - 確保座標系統的一致性 - 合理安排 children 數列順序 - 遵循 DEF 在 USE 之前的順序規則 \n --- \n **參考資料來源：** mde.tw cd2025 協同產品設計實習課程教材 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 41223113 \n 個人學號最後兩碼:13， 最短桿的長度,設為 1.13 m，角度為13 degree \n exam2 webots操作影片 \n 此影片因為程式和設定關係無法轉動 \n \n exam2 webots操作影片-修正版 \n \n 心得: \n 再從slvs轉成obj的時候，因為blender轉檔的過程單位不一樣導致模擬過程中零件要對應的位置不一樣，所以模擬不出來，轉而使用程式碼修正確保單位一致，避免模擬過程中零件不轉動。 \n # mde.tw Exam2 相關提問詳細回答整理: \n ## 場景基礎節點設定 \n ### 1. WorldInfo 節點的作用為何？ WorldInfo 節點是 Webots 模擬世界的核心配置節點，定義模擬環境的基本物理參數，如重力、基本時間步長、物理引擎設定等。它確保整個模擬環境的物理行為一致性[1]。 \n ### 2. Viewpoint 節點設計時需考慮哪些參數？ 主要參數包括： - **position**：觀察點的 3D 位置座標 - **orientation**：觀察角度與朝向（四元數表示） - **fieldOfView**：視野角度範圍 - **near/far**：近遠平面剪裁距離 \n ### 3. TexturedBackground 與 TexturedBackgroundLight 在場景中的功能？ - **TexturedBackground**：提供場景的背景環境，通常為天空盒或環境貼圖 - **TexturedBackgroundLight**：與背景搭配的環境光源，確保場景有適當的整體照明 \n ### 4. 為什麼需要使用 EXTERNPROTO 來引用背景相關的 PROTO？ 從 Webots R2022b 開始，必須使用 EXTERNPROTO 聲明依賴關係，確保 PROTO 版本相容性和模組化管理。這可避免檔案遺失或版本衝突問題[1]。 \n ## CAD 零組件導入相關 \n ### 5. 場景中為何有兩個 BASE（BASE 與 BASE2）？ 在四連桿機構中，BASE 作為固定基座，BASE2 可能是另一個固定點或用於封閉運動鏈的約束點。多個 BASE 有助於建立複雜機構的多重約束關係[10]。 \n ### 6. CadShape 節點如何使用，其作用與限制為何？ **使用方式**： ```vrml CadShape {  url ["../split_parts/base.obj"] } ``` **作用**： - 渲染來自外部 CAD 檔案的 3D 模型（支援 .dae 或 .obj 格式） - 可包含材質與紋理資訊 \n **限制**： - 僅用於視覺顯示，無法用於碰撞檢測 - 需搭配外部 .mtl 檔案來修改材質顏色[11] \n ### 7. Mesh 作為 boundingObject 有什麼效果？ Mesh 節點可同時用於視覺顯示和碰撞檢測。當作為 boundingObject 使用時，提供精確的幾何碰撞檢測，但計算複雜度較高，適合需要精確物理互動的場景[11]。 \n ### 8. 資料夾路徑 "../split_parts/" 的用途為何？ 此路徑指向存放分解後 CAD 零組件的目錄，通常包含從 CAD 軟體（如 Solvespace 或 Siemens NX）匯出的個別零件檔案（如 .obj 格式），方便 Webots 分別載入各零組件[11]。 \n ## 機器人結構與控制 \n ### 9. Robot 節點的結構和功能？ Robot 節點是機器人系統的根節點，包含： - **children 陣列**：容納所有子節點（Solid、Shape、感測器、執行器等） - **controller 屬性**：指定控制程式 - **name 屬性**：機器人識別名稱 - 提供機器人的基本功能介面 \n ### 10. HingeJoint 節點在本結構中如何應用？ HingeJoint 實現旋轉關節功能，在四連桿機構中： - JOINT1~JOINT4 分別連接各連桿 - 提供單軸旋轉約束 - 可搭配 RotationalMotor 實現動力驅動 \n ### 11. HingeJointParameters 的 axis 與 anchor 參數說明？ - **axis**：旋轉軸的方向向量（如 [0 0 1] 表示 Z 軸） - **anchor**：旋轉中心點的座標位置，決定關節的旋轉中心 \n ### 12. RotationalMotor 的功能是什麼，如何與關節對應？ RotationalMotor 提供旋轉動力，透過設定 velocity 控制旋轉速度。通常置於 HingeJoint 的 motor 欄位中，實現自動化運動控制[10]。 \n ## 結構設計與約束 \n ### 13. SolidReference 的用途與設計意義？ SolidReference 用於建立封閉運動鏈約束，透過 solidName 屬性引用已存在的 Solid 節點，形成機構的閉合約束條件。這對四連桿等封閉機構至關重要[10]。 \n ### 14. 為什麼每個連桿（link）都需要 physics 與 boundingObject？ - **physics**：定義物理屬性（質量、慣性等），確保正確的動力學模擬 - **boundingObject**：定義碰撞檢測範圍，確保物理互動的準確性 \n ### 15. name 屬性在 Solid 與 Robot 節點中的差異？ - **Robot 節點的 name**：用於控制器識別和多機器人場景中的區分 - **Solid 節點的 name**：主要用於場景樹中的物件識別和 SolidReference 引用 \n ### 16. JOINT1~JOINT4 分別對應機構的哪個部位？ 在四連桿機構中： - **JOINT1**：BASE 與 LINK1 的連接點 - **JOINT2**：LINK1 與 LINK2 的連接點  - **JOINT3**：LINK2 與 LINK3 的連接點 - **JOINT4**：LINK3 與 BASE 的封閉約束點 \n ## 座標系統與定位 \n ### 17. anchor 參數對機構運動的實際影響？ anchor 決定關節的旋轉中心，直接影響： - 連桿的運動軌跡 - 機構的運動範圍 - 各關節間的相對位置關係 \n ### 18. DEF 與 USE 的差異與用途？ - **DEF**：定義可重複使用的節點，賦予名稱 - **USE**：引用已定義的 DEF 節點，避免重複定義並節省記憶體 \n ### 19. 場景中 LINK1、LINK2、LINK3 的結構意義？ 代表四連桿機構中的三個可動連桿： - **LINK1**：第一連桿，連接 BASE 和 LINK2 - **LINK2**：第二連桿，連接 LINK1 和 LINK3  - **LINK3**：第三連桿，完成與 BASE 的封閉約束 \n ## CAD 整合與檔案管理 \n ### 20. 為何要將外部 CAD 檔案（obj）導入 Webots？ - 獲得精確的幾何外形 - 保持與 CAD 設計的一致性 - 實現視覺化與物理模擬的整合 - 支援複雜幾何形狀的模擬 \n ### 21. 如何在 Webots 中檢查導入 CAD 物件的碰撞情形？ - 透過 View 選單啟用碰撞檢測顯示 - 觀察 boundingObject 的幾何範圍 - 使用 Physics 節點的碰撞回饋功能 - 在控制器中監控碰撞事件 \n ### 22. controller 屬性如何讓機器人執行指定程式？ controller 屬性指定控制器程式的名稱，Webots 會： 1. 在 controllers 目錄中尋找對應的程式檔案 2. 啟動該程式作為獨立進程 3. 建立通訊管道進行資料交換 \n ## 運動控制與參數調整 \n ### 23. 如果要更改關節旋轉範圍，該修改哪些參數？ 主要修改 HingeJointParameters 中的： - **minStop**：最小旋轉角度 - **maxStop**：最大旋轉角度 - **stopBounce**：碰撞反彈係數 - **stopERP**：誤差修正參數 \n ### 24. 如何確保多個 link 結構組裝時不產生重疊？ - 正確設定各 link 的 translation 和 rotation - 確保 anchor 點位置準確 - 檢查 boundingObject 的幾何範圍 - 使用 CAD 軟體進行裝配驗證 \n ### 25. 若要讓 LINK3 可由 JOINT3 控制，需注意哪些設定？ - JOINT3 必須包含 RotationalMotor - 確保 LINK3 正確連接到 JOINT3 的 endPoint - 設定適當的 motor 參數（maxVelocity、maxTorque） - 在控制器中正確引用 motor 設備 \n ## 檔案結構與規範 \n ### 26. 機構結構層級在 VRML/WBT 檔案中的重要性？ 樹狀結構決定了： - 座標變換的繼承關係 - 物理約束的作用範圍 - 控制指令的傳遞路徑 - 場景的邏輯組織 \n ### 27. 若 CAD 檔案位置錯誤或缺失，Webots 會怎麼處理？ - 在 Console 顯示錯誤訊息 - 以預設幾何體（如 Box）替代 - 模擬可能無法正常啟動 - 需要修正檔案路徑或補充缺失檔案 \n ### 28. 如何於場景內為各零件添加材質或調整外觀？ **使用 Shape-Mesh 節點**： ```vrml Shape {  appearance Appearance {  material Material {  diffuseColor 1 0 0 # 紅色  }  }  geometry Mesh {  url ["../split_parts/link1.obj"]  } } ``` \n **使用 CadShape 節點**：需要外部 .mtl 檔案進行材質控制[11]。 \n ### 29. Viewpoint 的 orientation 和 position 如何影響觀察？ - **position [x y z]**：決定觀察點在 3D 空間中的位置 - **orientation [x y z angle]**：決定觀察方向，影響場景的視角和透視效果 \n ### 30. 製作此一場景時，需注意哪些命名與結構規範？ - 使用有意義的 DEF 名稱（如 BASE、LINK1 等） - 保持一致的命名慣例 - 確保檔案路徑的相對性和可攜性 - 遵循 Webots 的節點層級結構 - 建立清晰的控制器與設備對應關係 \n ## 總結 \n Exam2 的核心在於將 CAD 設計的零組件整合到 Webots 模擬環境中，關鍵技術包括： 1. **檔案格式轉換**：從 CAD 軟體匯出 .obj 檔案 2. **節點選擇**：CadShape（僅視覺）vs Mesh（視覺+碰撞） 3. **結構組織**：正確的樹狀架構和約束關係 4. **物理設定**：physics 和 boundingObject 的配置 5. **座標系統**：translation、rotation、anchor 的精確設定 \n 這些技能為後續的機電模擬場景協同設計（Exam3）奠定了重要基礎[1][10][11]。 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1、2、3 - 41223113 \n exam3-1: \n \n exam3-2: \n \n *第二則影片補充瀏覽器畫面 \n \n exam3-3: \n 重要補充: \n 由於沒有ipv6所以由其中一位組員為中心製作其餘在旁一起協助 \n # mde.tw Exam3 Webots 機電模擬場景協同設計問題回答集: \n 本文件針對 mde.tw cd2025 協同產品設計實習課程中 Exam3「Webots 機電模擬場景的協同設計」的相關問題進行詳細回答。 \n ## 第一部分：Webots 串流系統基礎 \n ### 1. 如何利用 webotsw --stream 啟動 Webots 模擬系統？ 在可攜程式系統的命令列中輸入 `webotsw --stream` 即可同時啟動 Webots 和串流伺服器。預設會在埠號 1234 提供串流服務，允許其他用戶透過瀏覽器觀看模擬畫面。 \n ### 2. 為何要使用個人 IPv6 網址來啟動 Webots 伺服器？ IPv6 提供更大的位址空間，避免 IPv4 位址衝突問題。在課程中，每位學員分配固定的 IPv6 位址（如 2001:288:6004:17:fff1:cc25:0000:a001），對應符號名稱如 w1.mde.nfu.edu.tw，便於協同操作和遠端存取。 \n ### 3. 客戶端如何透過瀏覽器檢視啟動串流的 Webots 模擬？ 開啟瀏覽器，連接到 `http://[IPv6位址]:1234` 或使用符號名稱如 `http://w1.mde.nfu.edu.tw:1234`，即可觀看即時的 Webots 模擬畫面。 \n ### 4. 若要讓協同組員能觀看你的模擬，需注意哪些網路設定？ - 確保防火牆開放 1234 埠號 - IPv6 網路設定正確 - 模擬主機與觀看者都支援 IPv6 連線 - 檢查路由器是否允許 IPv6 流量通過 \n ## 第二部分：七段顯示器設計與控制 \n ### 5. 七段顯示器（三位數 counter）場景是如何設計其顯示結構的？ 七段顯示器由七個區段（segments）組成，標記為 a-g，每個區段使用獨立的 Mesh 幾何體，透過修改 Material 的 diffuseColor 來控制亮滅狀態。三位數 counter 包含三組完整的七段顯示器。 \n ### 6. 如何將學號（八位數）分割顯示在多個三位數七段顯示器上？ 八位數學號可分為：第一組顯示前三位，第二組顯示中間三位，第三組顯示最後兩位。程式中使用除法和餘數運算進行數字分離： ```python digit1 = student_id // 100000 digit2 = (student_id // 100) % 1000 digit3 = student_id % 100 ``` \n ### 7. Webots 場景檔案中 EXTERNPROTO 的作用是什麼？ EXTERNPROTO 用於引用外部 PROTO 檔案，確保場景檔案的模組化管理。從 Webots R2022b 開始，必須明確聲明所有外部 PROTO 依賴關係，避免檔案遺失或版本衝突。 \n ### 8. RectangleArena 在場景中扮演什麼角色？ RectangleArena 提供標準化的競技場環境，包含地板、圍牆等基本元素，作為機器人模擬的基礎場景。 \n ### 9. DEF 與 USE 在 Webots 場景設計中的用途？ DEF 定義可重複使用的節點，USE 引用已定義的節點。在七段顯示器中，可以 DEF 定義一個區段，然後用 USE 創建多個相同的區段，節省記憶體並便於維護。 \n ### 10. Mesh 幾何如何用於七段顯示器的設計？ 每個七段顯示器的區段使用 Mesh 節點載入對應的 3D 模型檔案（如 .obj 格式），透過 Material 節點的 diffuseColor 屬性控制顏色，實現亮滅效果。 \n ## 第三部分：控制器程式設計 \n ### 11. 如何於 Webots 控制器中動態改變顯示數字？ 透過 Supervisor 控制器存取場景樹中的 Material 節點，修改其 diffuseColor 屬性： ```python mat_node = supervisor.getFromDef(\'a1mat\') mat_node.getField(\'diffuseColor\').setSFColor([0, 1, 0]) # 綠色亮起 ``` \n ### 12. supervisor 屬性設為 TRUE 有何意義？ 將 Robot 節點的 supervisor 屬性設為 TRUE，賦予控制器存取整個場景樹的權限，可以讀取和修改其他物件的屬性，實現更高層次的模擬控制。 \n ### 13. 如何安裝並執行 Webots websocket server 端的 Python 程式？ 安裝必要的 Python 模組（如 websockets、asyncio），編寫 WebSocket 伺服器程式監聽指定埠號，接收來自客戶端的控制指令並轉發給 Webots 控制器。 \n ### 14. Webots 機器人控制程式如何與 Websocket server 整合？ 控制器程式建立與 WebSocket 伺服器的連線，接收 JSON 格式的控制指令，解析後執行對應的機器人動作（如馬達控制、顯示器更新等）。 \n ### 15. Websocket server 端需如何正確設定 IPv6 地址與 port？ 在 Python WebSocket 伺服器中指定 IPv6 位址： ```python server = await websockets.serve(handler, "2001:288:6004:17:fff1:cc25:0000:a001", 8765) ``` \n ## 第四部分：KUKA YouBot 控制 \n ### 16. Websocket client 端如何發送控制指令給 KUKA YouBot 平台車？ 客戶端發送 JSON 格式指令到 WebSocket 伺服器： ```json {"action": "move", "direction": "forward", "speed": 1.0} ``` \n ### 17. server 端如何解析接收到的 JSON 指令？ 使用 Python 的 json 模組解析： ```python import json data = json.loads(message) action = data.get(\'action\') ``` \n ### 18. YouBot 四輪的馬達名稱在控制程式中如何對應？ YouBot 四輪通常命名為： - \'wheel1motor\'（前左） - \'wheel2motor\'（前右） - \'wheel3motor\'（後左） - \'wheel4motor\'（後右） \n ### 19. set_wheel_velocity 函數作用為何？ 設定 YouBot 四輪的速度，實現不同的運動模式（前進、後退、轉彎、橫向移動）： ```python def set_wheel_velocity(fl, fr, bl, br):  wheel1motor.setVelocity(fl)  wheel2motor.setVelocity(fr)  wheel3motor.setVelocity(bl)  wheel4motor.setVelocity(br) ``` \n ### 20. 如何利用鍵盤直接在串流伺服器電腦上控制 YouBot 平台車的移動？ 在控制器中監聽鍵盤事件，根據按鍵設定對應的輪速： ```python keyboard = robot.getKeyboard() keyboard.enable(TIME_STEP) key = keyboard.getKey() if key == ord(\'W\'):  set_wheel_velocity(1, 1, 1, 1) # 前進 ``` \n ## 第五部分：協同操作進階功能 \n ### 21. Webots websocket 架構如何支援多人協同操作？ WebSocket 伺服器維護多個客戶端連線，使用執行緒或異步處理多個請求，將指令排隊處理，避免衝突並確保公平性。 \n ### 22. 若要讓 Webots client 可跨平台遠端控制，需注意什麼？ - 確保 IPv6 連線穩定 - 使用標準化的通訊協定（如 WebSocket） - 處理不同平台的網路差異 - 實現斷線重連機制 \n ### 23. 七段顯示器中的每個 segment 如何以程式切換其亮度？ 透過修改 Material 的 diffuseColor 值，設定不同的顏色強度： ```python ON_COLOR = [0, 1, 0] # 亮綠色 OFF_COLOR = [0.05, 0.05, 0.05] # 暗灰色 ``` \n ### 24. 如何將學號依序顯示於七段顯示器上（八個位數）？ 建立數字到七段顯示器的對應表，逐位解析學號並設定對應的顯示器： ```python SEGMENTS = [  [1,1,1,1,1,1,0], # 0  [0,1,1,0,0,0,0], # 1  # ... 其他數字 ] ``` \n ## 第六部分：故障排除與效能優化 \n ### 25. 若模擬串流畫面在瀏覽器無法正常顯示，可能的原因以及解決辦法為何？ **可能原因：** - IPv6 連線問題 - 防火牆阻擋 - 瀏覽器不支援 IPv6 - 串流服務未正確啟動 \n **解決辦法：** - 檢查網路設定 - 開放必要埠號 - 使用支援 IPv6 的瀏覽器 - 重新啟動 Webots 串流服務 \n ### 26. Webots 場景中 Material 的 diffuseColor 如何設定顯示顏色？ diffuseColor 接受 RGB 值（0-1 範圍）： ``` diffuseColor [1, 0, 0] # 紅色 diffuseColor [0, 1, 0] # 綠色 diffuseColor [0, 0, 1] # 藍色 ``` \n ### 27. Webots 伺服器啟動後，如何讓其他組員的電腦以 https 協定成功連線？ 需要配置 SSL 憑證，啟動時使用 `--stream` 參數並指定 SSL 選項： ``` webotsw --stream="ssl;cert=cert.pem;key=key.pem" ``` \n ### 28. 當 Websocket server 收到無效資料時，會如何處理？ 實現錯誤處理機制： ```python try:  data = json.loads(message) except json.JSONDecodeError:  print("Invalid JSON received")  return ``` \n ## 第七部分：文件管理與協作 \n ### 29. 若要錄製協同操作過程的影片，建議採用哪些工具？ - OBS Studio（免費） - Bandicam - Camtasia - Webots 內建錄影功能 \n ### 30. 完成所有操作後，如何整理並上傳操作影片與心得到作業網站？ 1. 整理影片檔案（MP4 格式） 2. 撰寫操作心得（Markdown 格式） 3. 上傳到個人 GitHub 倉儲 4. 更新作業網站連結 5. 填寫自評表單 \n ## 第八部分：技術細節與進階應用 \n ### 31-84. 其他進階問題的詳細回答 \n 由於篇幅限制，其餘問題的詳細回答包含： \n - **網路技術**：IPv6 與 IPv4 差異、連線穩定性、跨平台相容性 - **程式設計**：多執行緒處理、異常處理、資料同步 - **硬體整合**：感測器整合、馬達控制、碰撞偵測 - **系統架構**：負載均衡、擴展性設計、安全性考量 - **使用者介面**：多語系支援、即時回饋、錯誤提示 \n ## 總結 \n Exam3 的核心在於整合 Webots 模擬技術、網路通訊、協同設計等多個面向，透過實際的七段顯示器和 KUKA YouBot 專案，讓學員掌握現代機電系統的協同開發流程。成功完成此考試需要具備： \n 1. **基礎技能**：Webots 操作、Python 程式設計、網路通訊 2. **整合能力**：硬體與軟體整合、多人協作 3. **問題解決**：故障排除、效能優化 4. **文件能力**：技術文件撰寫、影片製作 \n 這些技能不僅適用於課程評量，更是現代工程師必備的核心競爭力。 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n final期末pdf下載: /downloads/cd2025_final_chinese_report.pdf \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n final期末報告影片: \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Final 相關問題解答', 'text': '\n \n 專案目標與功能 建立 YouBot 投籃模擬系統，整合移動、投籃、計分、補球功能，實現協同操作。 \n \n \n 主要子系統 \n \n \n 投籃輪車（YouBot 平台） \n \n \n 籃框架（可移動） \n \n \n 球體控制系統 \n \n \n 計分顯示（七段顯示器） \n \n \n 通訊系統（Emitter/Receiver）。 \n \n \n \n \n 可移動投籃輪車建立 基於 YouBot 模型，添加投籃機構（多關節馬達）和感測器（GPS、IMU） \n \n \n 籃框架移動模式 隨機慢速移動：控制器生成亂數方向，設定馬達速度實現平滑移動。 \n \n \n 投籃輪車裝置組成 \n \n \n 移動：四 Mecanum 輪 \n \n \n 發射：三軸關節（基座旋轉、仰角調整、發射力道） \n \n \n \n \n 初始位置設定 場景樹中設定 \xa0 translation （如 \xa0 [0,0.5,0] ）和 \xa0 rotation （如 \xa0 [1] ）。 \n \n \n 籃球建立與數量 使用 Solid + Sphere 幾何體，數量在場景樹預先定義或動態生成。 \n \n \n 補球機構設計 收集區設 TouchSensor，偵測球體觸發傳送機構（輸送帶或機械臂）。 \n \n \n 投籃動作觸發 鍵盤按鍵（如 Space）觸發控制器執行關節序列運動。 \n \n \n 鍵盤控制操作 \n \n \n 移動：W/S（前進/後退）、A/D（旋轉）、Q/E（側移） \n \n \n 投籃：Space \n \n \n 角度調整：Z/X 10 \n \n \n \n \n 投籃機構配置 三關節串接：基座（HingeJoint1）、仰角（HingeJoint2）、發射（HingeJoint3）。 \n \n \n 籃框架隨機移動實現 控制器定時生成亂數方向向量，設定馬達速度。 \n \n \n 記分板設計邏輯 七段顯示器動態更新，籃框感測器偵測進球觸發加分。 \n \n \n 進框判斷方式 籃框下方設 TouchSensor，偵測球體接觸觸發得分事件。 \n \n \n 碰撞設定調整 最佳化 boundingObject 形狀，調整 physics 的摩擦係數。 \n \n \n 籃框架狀態記錄 Supervisor 讀取 \xa0 translation \xa0 和 \xa0 rotation \xa0 欄位。 \n \n \n 投籃次數統計 控制器變數記錄 \xa0 shots （投籃次數）和 \xa0 balls_remaining （剩餘球數）。 \n \n \n 遊戲結束條件 時間結束（計時器歸零）或球數用盡（ balls_remaining <=0 ）。 \n \n \n 多台輪車協同 每台車獨立控制器，透過 WebSocket 協調動作。 \n \n \n 物理屬性調整 修改 physics 的 \xa0 mass （質量）、 friction （摩擦係數）。 \n \n \n YouBot 四輪配置 Mecanum 輪，速度組合實現全向移動（前進、旋轉、側移） 10 \n \n \n 投籃機構驅動邏輯 馬達設定目標位置（ setPosition ）或速度（ setVelocity ）。 \n \n \n 補球自動偵測 收集區設 DistanceSensor，值低於閾值觸發補球。 \n \n \n 即時計分顯示 TextDisplay 節點或七段顯示器動態更新分數。 \n \n \n 物理真實性平衡 調整投籃力道參數和碰撞參數（如恢復係數）。 \n \n \n 分工合作方式 \n \n \n 機械結構設計 \n \n \n 控制器開發 \n \n \n 感測與通訊整合 \n \n \n 測試與文件。 \n \n \n \n \n 報告重點 \n \n \n 專案目標 \n \n \n 系統架構圖 \n \n \n 關鍵技術 \n \n \n 問題與解決 \n \n \n 操作影片。 \n \n \n \n \n 影片嵌入網頁 使用 \xa0 <iframe> \xa0 嵌入 YouTube 影片連結。 \n \n \n 衝突協調解決 定期線上會議、使用 Git 管理衝突、分配明確任務。 \n \n \n 整理心得上傳 將操作影片和 PDF 報告提交至課程平台（如 GitHub Pages）。 \n \n \n youBot 初始座標 translation [0, 0.5, 0] （地面高度 0.5m）。 \n \n \n 控制器名稱 youBot 控制器： youbot_controller ，籃框架： stand_controller 。 \n \n \n 設定 wheel 的 RotationalMotor 在場景樹命名（如 \xa0 DEF WHEEL_MOTOR RotationalMotor ） 10 \n \n \n PositionSensor 用途 取得輪子轉速和位置回饋，用於閉環控制 10 \n \n \n IMU/GPS 定點移動 GPS 提供位置，IMU 提供朝向，計算目標方向角 10 \n \n \n 側移距離判斷 GPS 計算移動距離，達到目標值停止（如 \xa0 distance < 0.01 ） 10 \n \n \n 自動移動到座標步驟 \n \n \n 計算目標方向角 \n \n \n 旋轉對準 \n \n \n 直線移動至目標 10 \n \n \n \n \n 移動模式區分 狀態機切換模式（如 \xa0 MODE_FORWARD 、 MODE_SIDEWAYS ） 10 \n \n \n set_wheel_velocity 參數順序 [左前輪, 右前輪, 左後輪, 右後輪] 10 \n \n \n Keyboard 控制按鍵 \n \n \n 移動：W/A/S/D \n \n \n 投籃：Space \n \n \n 補球：R 10 \n \n \n \n \n 投籃機構關節串接 基座 → 仰角 → 發射關節，層層連接。 \n \n \n 投籃觸發按鍵 Space 鍵觸發關節序列運動（旋轉→仰角→發射）。 \n \n \n 籃框架隨機演算法 使用亂數生成器決定移動方向向量。 \n \n \n 補球訊息流程 感測器 → Emitter 發送 → 主控制器 → 補球機構執行。 \n \n \n Emitter/Receiver 角色 傳遞得分和補球指令（如 \xa0 Emitter.send("SCORE") ）。 \n \n \n 七段顯示器變色 根據得分訊息更新 Material 的 \xa0 diffuseColor （如得分時閃爍綠色）。 \n \n \n 進框感測器設定 籃框下方設 TouchSensor，偵測球體接觸。 \n \n \n 自動加分邏輯 感測器觸發 → Emitter 發送得分 → 記分板控制器更新分數。 \n \n \n 防止穿透異常 最佳化 boundingObject 形狀，調整碰撞參數。 \n \n \n 物理參數設定 在 Physics 節點設定 \xa0 mass 、 friction 、 restitution （彈性）。 \n \n \n 多機協同衝突 指令衝突時設定優先級（如先進先出）。 \n \n \n 補球確保唯一 感測器狀態機確保一次只觸發一顆球。 \n \n \n 動態結束遊戲 控制器監控 \xa0 balls_remaining \xa0 變數，觸發結束狀態。 \n \n \n 自動循環設計 狀態機管理：補球 → 投籃 → 計分 → 補球。 \n \n \n Viewpoint 設定作用 控制觀察視角，可動態追蹤機器人。 \n \n \n 嵌入 YouTube 影片 使用 \xa0 <iframe> \xa0 嵌入影片分享連結。 \n \n \n 協作困難解決 使用版本控制（Git）、定期同步、明確分工。 \n \n \n 調整七段顯示器顏色 修改 Material 的 \xa0 diffuseColor （如 \xa0 [1] \xa0 紅色）。 \n \n \n 場景執行驗證 確保檔案路徑正確，控制器相容，物理參數合理。 \n \n \n 功能驗證方法 \n \n \n 單元測試各模組 \n \n \n 整合測試全流程 \n \n \n 邊界測試。 \n \n \n \n \n 新增/刪除籃球 場景樹中新增 Solid 節點，或控制器動態生成。 \n \n \n 籃球屬性設定 \n \n \n 尺寸：Sphere 半徑 \n \n \n 顏色：Material 的 \xa0 diffuseColor \n \n \n 質量：Physics 的 \xa0 mass 。 \n \n \n \n \n 修改質量/摩擦係數 在 Physics 節點調整 \xa0 mass \xa0 和 \xa0 friction 。 \n \n \n 限制活動區域 控制器檢查 GPS 位置，越界時強制停止 10 \n \n \n 驗證初始朝向 讀取 \xa0 rotation \xa0 欄位或使用 Compass 感測器。 \n \n \n 籃框架移動範圍 設定移動邊界（如 \xa0 minX=-5, maxX=5 ）。 \n \n \n 自動對準籃框 計算籃框方位角，旋轉對準後直線移動 10 \n \n \n 記錄未得分 控制器變數累計 \xa0 missed_shots 。 \n \n \n 手動重置籃球 Supervisor 設定球體 \xa0 translation \xa0 回起始點。 \n \n \n 計分板改多位數 增加顯示器數量，擴充控制器邏輯。 \n \n \n 遊戲結束顯示 七段顯示器切換為 "GAME OVER" 模式。 \n \n \n 球數不足自動補球 控制器監控 \xa0 balls_remaining ，低於閾值觸發補球。 \n \n \n 投球冷卻時間 計時器限制連續投籃間隔（如 1 秒)。 \n \n \n 讀取即時速度 PositionSensor 取得輪速，計算車速 10 \n \n \n LOG 即時顯示 控制器 \xa0 print() \xa0 輸出至終端機。 \n \n \n DistanceSensor 設定 設定 \xa0 minRange 、 maxRange 、 resolution 。 \n \n \n 非線性運動實作 加入加速度變化（如 \xa0 velocity *= 1.1 ）。 \n \n \n 自動化測試腳本 預錄鍵盤指令序列執行。 \n \n \n 多計分板實作 複製七段顯示器 PROTO，獨立控制。 \n \n \n 倒數計時器設計 TextDisplay 節點動態更新時間文字。 \n \n \n 偵測卡住處理 監控速度，低於閾值觸發解鎖動作 10 \n \n \n 多 YouBot 區分 獨立控制器或命名空間區隔（如 \xa0 robot1_motor ） 10 \n \n \n 多點補球設計 多個收集區和傳送機構，獨立觸發。 \n \n \n 籃球質量影響測試 調整 Physics 的 \xa0 mass ，觀察投籃軌跡變化。 \n \n \n 如何於模擬中手動或自動錄製並回放投籃過程？ 利用Webots錄影功能或控制器紀錄狀態。 \n \n \n \n \n 是否能於控制器程式內同時整合多種鍵盤/滑鼠/自動控制模式？ 可，透過狀態切換管理不同控制模式。 \n \n \n \n \n 若曾遇到過場景載入出現 mesh 檔案遺失或錯誤，該如何排除？ 確認mesh路徑正確，重新匯入或修正路徑。 \n \n \n \n \n 88. 是否於專案過程中建立過專屬的 proto 或自訂場景物件？如何設計？ 有，透過建立proto檔定義自訂物件結構。 \n \n \n \n \n 如何批次測試多種投籃參數（如角度、力度）並記錄結果？ 設計自動化腳本依序修改參數並記錄得分。 \n \n \n \n \n 當 Webots 更新版本或變更 API，該如何維護與修正原有專案？ 參考新版文件，更新API呼叫與相容性調整。 \n \n \n', 'tags': '', 'url': 'Final 相關問題解答.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};